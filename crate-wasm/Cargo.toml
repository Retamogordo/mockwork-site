[package]
name = "mockwork"
version = "0.1.0"
authors = ["Yury <yury.yukhananov@tutanota.com>"]
edition = "2018"
license = "MIT OR Apache-2.0"
description = "Asynchronous Network Simulator on Web Assembly"
repository = "https://github.com/Retamogordo/mockwork"
keywords = ["asynchronous", "wasm", "web-assembly", "web-worker", "browser-simulator-demo"]

[target.'cfg(target_arch = "wasm32")']
[lib]
crate-type = ["cdylib", "rlib"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
futures-timer = "3.0.2"
instant = { version = "0.1" }
simple_logger = "1.11.0"
clap = "2.33.3"
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.24"
wasm-logger = "0.2.0"
getrandom = { version = "0.2", features = ["js"] }
js-sys = "0.3.51"
gloo-timers = {version = "0.2.1", features = ["futures"]}
instant = { version = "0.1", features = [ "wasm-bindgen" ] }
console_error_panic_hook = { version = "0.1.6", optional = false }
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies]
async-std = {version = "1.9.0", features = ["attributes"]}
rand = "0.8.3"
colored = "2.0.0"
strum = "0.18.0"
strum_macros = "0.18.0"

futures = "0.3.15"
log = "0.4.14"
petgraph = "0.5.1"
serde_json = "1.0.64"
serde = { version = "1.0.126", features = ["derive"] }
once_cell = "1.8.0"
lazy_static = "1.4.0"
